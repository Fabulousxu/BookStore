{"ast":null,"code":"var _jsxFileName = \"E:\\\\MyProjects\\\\BookStore\\\\BookStore-Frontend-react\\\\src\\\\components\\\\background\\\\background.jsx\";\nimport React from 'react';\nimport './background.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Background() {\n  //config\n  const count = 320,\n    speed = 1,\n    dist = 60,\n    rSpeed = 0.05,\n    rMax = 80,\n    frame = 20;\n  let cvs = /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"background-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this),\n    img = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"background-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this),\n    // ctx = cvs.getContext(\"2d\"),\n    cgx = w = cvs.width = window.innerWidth,\n    h = cvs.height = window.innerHeight,\n    r = 0,\n    rVel = rSpeed,\n    points = [],\n    rand = Math.random;\n  for (let i = 0; i < count; ++i) {\n    points.push({\n      size: rand() * 4 + 0.5,\n      pos: {\n        x: rand() * w,\n        y: rand() * h\n      },\n      vel: {\n        x: (rand() - 0.5) * speed,\n        y: (rand() - 0.5) * speed\n      },\n      color: {\n        r: rand() * 255,\n        g: rand() * 255,\n        b: rand() * 255\n      }\n    });\n  }\n  setInterval(() => {\n    w = cvs.width = window.innerWidth;\n    h = cvs.height = window.innerHeight;\n    r += rVel;\n    if (r > rMax && rVel > 0 || r < -rMax && rVel < 0) rVel *= -1;\n    img.style.transform = \"rotate(\" + r + \"deg)\";\n    ctx.clearRect(0, 0, w, h);\n    points.forEach((p, idx) => {\n      p.pos.x += p.vel.x;\n      p.pos.y += p.vel.y;\n      if (p.pos.x <= 0 && p.vel.x < 0 || p.pos.x >= w && p.vel.x > 0) p.vel.x *= -1;\n      if (p.pos.y <= 0 && p.vel.y < 0 || p.pos.y >= h && p.vel.y > 0) p.vel.y *= -1;\n      ctx.fillStyle = \"white\";\n      ctx.fillRect(p.pos.x - p.size / 2, p.pos.y - p.size / 2, p.size, p.size);\n      for (let i = idx + 1; i < points.length; ++i) {\n        let pi = points[i],\n          xDist = pi.pos.x - p.pos.x,\n          yDist = pi.pos.y - p.pos.y,\n          rate = 1 - (xDist * xDist + yDist * yDist) / (dist * dist);\n        if (rate > 0) {\n          ctx.lineWidth = 0.4;\n          ctx.strokeStyle = \"rgba(\" + p.color.r + \",\" + p.color.g + \",\" + p.color.b + \",\" + rate + \")\";\n          ctx.beginPath();\n          ctx.moveTo(p.pos.x, p.pos.y);\n          ctx.lineTo(pi.pos.x, pi.pos.y);\n          ctx.stroke();\n        }\n      }\n    });\n  }, 1000 / frame);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [cvs, img]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_c = Background;\nvar _c;\n$RefreshReg$(_c, \"Background\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Background","count","speed","dist","rSpeed","rMax","frame","cvs","id","fileName","_jsxFileName","lineNumber","columnNumber","img","cgx","w","width","window","innerWidth","h","height","innerHeight","r","rVel","points","rand","Math","random","i","push","size","pos","x","y","vel","color","g","b","setInterval","style","transform","ctx","clearRect","forEach","p","idx","fillStyle","fillRect","length","pi","xDist","yDist","rate","lineWidth","strokeStyle","beginPath","moveTo","lineTo","stroke","children","_c","$RefreshReg$"],"sources":["E:/MyProjects/BookStore/BookStore-Frontend-react/src/components/background/background.jsx"],"sourcesContent":["import React from 'react'\r\nimport './background.css'\r\n\r\nexport default function Background() {\r\n  //config\r\n  const count = 320,\r\n    speed = 1,\r\n    dist = 60,\r\n    rSpeed = 0.05,\r\n    rMax = 80,\r\n    frame = 20\r\n\r\n  let cvs = <canvas id=\"background-canvas\" />,\r\n    img = <div id=\"background-image\" />,\r\n    // ctx = cvs.getContext(\"2d\"),\r\n    cgx = \r\n    w = cvs.width = window.innerWidth,\r\n    h = cvs.height = window.innerHeight,\r\n    r = 0,\r\n    rVel = rSpeed,\r\n    points = [],\r\n    rand = Math.random\r\n  \r\n  for (let i = 0; i < count; ++i) {\r\n    points.push({\r\n      size: rand() * 4 + 0.5,\r\n      pos: {\r\n        x: rand() * w,\r\n        y: rand() * h\r\n      },\r\n      vel: {\r\n        x: (rand() - 0.5) * speed,\r\n        y: (rand() - 0.5) * speed\r\n      },\r\n      color: {\r\n        r: rand() * 255,\r\n        g: rand() * 255,\r\n        b: rand() * 255\r\n      }\r\n    })\r\n  }\r\n\r\n  setInterval(() => {\r\n    w = cvs.width = window.innerWidth\r\n    h = cvs.height = window.innerHeight\r\n    r += rVel\r\n    if ((r > rMax && rVel > 0) || (r < -rMax && rVel < 0))\r\n      rVel *= -1\r\n    img.style.transform = \"rotate(\" + r + \"deg)\"\r\n    ctx.clearRect(0, 0, w, h)\r\n    points.forEach((p, idx) => {\r\n      p.pos.x += p.vel.x\r\n      p.pos.y += p.vel.y\r\n      if ((p.pos.x <= 0 && p.vel.x < 0) || (p.pos.x >= w && p.vel.x > 0))\r\n        p.vel.x *= -1\r\n      if ((p.pos.y <= 0 && p.vel.y < 0) || (p.pos.y >= h && p.vel.y > 0))\r\n        p.vel.y *= -1\r\n      ctx.fillStyle = \"white\"\r\n      ctx.fillRect(p.pos.x - p.size / 2, p.pos.y - p.size / 2, p.size, p.size)\r\n      for (let i = idx + 1; i < points.length; ++i) {\r\n        let pi = points[i],\r\n          xDist = pi.pos.x - p.pos.x,\r\n          yDist = pi.pos.y - p.pos.y,\r\n          rate = 1 - (xDist * xDist + yDist * yDist) / (dist * dist)\r\n        if (rate > 0) {\r\n          ctx.lineWidth = 0.4\r\n          ctx.strokeStyle = \"rgba(\" + p.color.r + \",\" + p.color.g + \",\" + p.color.b + \",\" + rate + \")\"\r\n          ctx.beginPath()\r\n          ctx.moveTo(p.pos.x, p.pos.y)\r\n          ctx.lineTo(pi.pos.x, pi.pos.y)\r\n          ctx.stroke()\r\n        }\r\n      }\r\n    })\r\n  }, 1000 / frame)\r\n  \r\n  return (\r\n    <div>\r\n      {cvs}\r\n      {img}\r\n    </div>\r\n  )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}