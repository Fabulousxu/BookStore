{"ast":null,"code":"import { apiURL, post, get } from \"./util\";\nexport async function searchBooks(keyword, pageIndex, pageSize) {\n  let res = await get(`${apiURL}/books?keyword=${keyword}&pageIndex=${pageIndex}&pageSize=${pageSize}`),\n    bookList = [];\n  res.items.forEach((item, index) => {\n    bookList.push({\n      id: item.id,\n      title: item.title,\n      author: item.author,\n      price: item.price,\n      cover: item.cover,\n      index: index\n    });\n  });\n  return bookList;\n}\nexport async function getBooks(pageIndex, pageSize) {\n  return await searchBooks('', pageIndex, pageSize);\n}\nexport async function getBookInfo(id) {\n  let res = await get(`${apiURL}/book/${id}`);\n  return {\n    id: res.id,\n    title: res.title,\n    author: res.author,\n    price: res.price,\n    intro: res.description,\n    cover: res.cover,\n    sales: res.sales\n  };\n}\nexport async function getBookComments(id, pageIndex, pageSize, sort) {\n  let res = await get(`${apiURL}/book/${id}/comments?pageIndex=${pageIndex}&pageSize=${pageSize}&sort=${sort}`),\n    commentList = [];\n  res.items.forEach(item => {\n    let datetime = new Date(item.createdAt),\n      y = datetime.getFullYear(),\n      m = datetime.getMonth() + 1,\n      d = datetime.getDate(),\n      time = y + \"-\" + (m < 10 ? \"0\" + m : m) + \"-\" + (d < 10 ? \"0\" + d : d) + \" \" + datetime.toTimeString().substr(0, 8);\n    commentList.push({\n      id: item.id,\n      username: item.username,\n      text: item.content,\n      time: time,\n      like: item.like,\n      liked: item.liked\n    });\n  });\n  return {\n    total: res.total,\n    list: commentList\n  };\n}\nexport async function comment(id, content) {\n  let res = await post(`${apiURL}/book/${id}/comments`, {\n    content\n  });\n  if (!res.ok) throw res.message;\n}","map":{"version":3,"names":["apiURL","post","get","searchBooks","keyword","pageIndex","pageSize","res","bookList","items","forEach","item","index","push","id","title","author","price","cover","getBooks","getBookInfo","intro","description","sales","getBookComments","sort","commentList","datetime","Date","createdAt","y","getFullYear","m","getMonth","d","getDate","time","toTimeString","substr","username","text","content","like","liked","total","list","comment","ok","message"],"sources":["E:/MyProjects/BookStore/BookStore-Frontend/src/service/book.js"],"sourcesContent":["import { apiURL, post, get } from \"./util\"\r\n\r\nexport async function searchBooks(keyword, pageIndex, pageSize) {\r\n  let res = await get(`${apiURL}/books?keyword=${keyword}&pageIndex=${pageIndex}&pageSize=${pageSize}`),\r\n    bookList = []\r\n  res.items.forEach((item, index) => {\r\n    bookList.push({\r\n      id: item.id,\r\n      title: item.title,\r\n      author: item.author,\r\n      price: item.price,\r\n      cover: item.cover,\r\n      index: index\r\n    })\r\n  })\r\n  return bookList\r\n}\r\n\r\nexport async function getBooks(pageIndex, pageSize) {\r\n  return await searchBooks('', pageIndex, pageSize)\r\n}\r\n\r\nexport async function getBookInfo(id) {\r\n  let res = await get(`${apiURL}/book/${id}`)\r\n  return {\r\n    id: res.id,\r\n    title: res.title,\r\n    author: res.author,\r\n    price: res.price,\r\n    intro: res.description,\r\n    cover: res.cover,\r\n    sales: res.sales\r\n  }\r\n}\r\n\r\nexport async function getBookComments(id, pageIndex, pageSize, sort) {\r\n  let res = await get(`${apiURL}/book/${id}/comments?pageIndex=${pageIndex}&pageSize=${pageSize}&sort=${sort}`),\r\n    commentList = []\r\n  res.items.forEach(item => {\r\n    let datetime = new Date(item.createdAt),\r\n        y = datetime.getFullYear(),\r\n        m = datetime.getMonth() + 1,\r\n        d = datetime.getDate(),\r\n        time = y + \"-\" + (m < 10 ? \"0\" + m : m) + \"-\" + (d < 10 ? \"0\" + d : d) + \" \" + datetime.toTimeString().substr(0, 8);\r\n    commentList.push({\r\n      id: item.id,\r\n      username: item.username,\r\n      text: item.content,\r\n      time: time,\r\n      like: item.like,\r\n      liked: item.liked\r\n    })\r\n  })\r\n  return {\r\n    total: res.total,\r\n    list: commentList\r\n  }\r\n}\r\n\r\nexport async function comment(id, content) {\r\n  let res = await post(`${apiURL}/book/${id}/comments`, { content })\r\n  if (!res.ok) throw res.message\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}