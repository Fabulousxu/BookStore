{"ast":null,"code":"var _jsxFileName = \"E:\\\\MyProjects\\\\BookStore\\\\BookStore-Frontend-react\\\\src\\\\components\\\\background\\\\background.jsx\";\nimport React from 'react';\nimport './background.css';\n\n// const count = 320,\n// speed = 1,\n// dist = 60,\n// rSpeed = 0.05,\n// rMax = 80,\n//   frame = 20,\n//   onLoad = () => {\n//   let cvs = document.getElementById(\"background-canvas\"),\n//     img = document.getElementById(\"background-image\"),\n//     ctx = cvs.getContext(\"2d\"),\n//     w = cvs.width = window.innerWidth,\n//     h = cvs.height = window.innerHeight,\n//     r = 0,\n//     rVel = rSpeed,\n//     points = [],\n//     rand = Math.random\n//   for (let i = 0; i < count; ++i) {\n//     points.push({\n//       size: rand() * 4 + 0.5,\n//       pos: {\n//         x: rand() * w,\n//         y: rand() * h\n//       },\n//       vel: {\n//         x: (rand() - 0.5) * speed,\n//         y: (rand() - 0.5) * speed\n//       },\n//       color: {\n//         r: rand() * 255,\n//         g: rand() * 255,\n//         b: rand() * 255\n//       }\n//     })\n//   }\n//   setInterval(() => {\n//     w = cvs.width = window.innerWidth\n//     h = cvs.height = window.innerHeight\n//     r += rVel\n//     if ((r > rMax && rVel > 0) || (r < -rMax && rVel < 0))\n//       rVel *= -1\n//     img.style.transform = \"rotate(\" + r + \"deg)\"\n//     ctx.clearRect(0, 0, w, h)\n//     points.forEach((p, idx) => {\n//       p.pos.x += p.vel.x\n//       p.pos.y += p.vel.y\n//       if ((p.pos.x <= 0 && p.vel.x < 0) || (p.pos.x >= w && p.vel.x > 0))\n//         p.vel.x *= -1\n//       if ((p.pos.y <= 0 && p.vel.y < 0) || (p.pos.y >= h && p.vel.y > 0))\n//         p.vel.y *= -1\n//       ctx.fillStyle = \"white\"\n//       ctx.fillRect(p.pos.x - p.size / 2, p.pos.y - p.size / 2, p.size, p.size)\n//       for (let i = idx + 1; i < points.length; ++i) {\n//         let pi = points[i],\n//           xDist = pi.pos.x - p.pos.x,\n//           yDist = pi.pos.y - p.pos.y,\n//           rate = 1 - (xDist * xDist + yDist * yDist) / (dist * dist)\n//         if (rate > 0) {\n//           ctx.lineWidth = 0.4\n//           ctx.strokeStyle = \"rgba(\" + p.color.r + \",\" + p.color.g + \",\" + p.color.b + \",\" + rate + \")\"\n//           ctx.beginPath()\n//           ctx.moveTo(p.pos.x, p.pos.y)\n//           ctx.lineTo(pi.pos.x, pi.pos.y)\n//           ctx.stroke()\n//         }\n//       }\n//     })\n//   }, 1000 / frame)\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Background() {\n  let canvas1 = /*#__PURE__*/_jsxDEV(\"canvas\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this),\n    context1 = canvas1.getContext('2d'),\n    onLoad = () => {\n      let canvas2 = document.getElementById('background-canvas'),\n        context2 = canvas2.getContext('2d');\n    };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"background\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"background-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), canvas1, /*#__PURE__*/_jsxDEV(\"script\", {\n      children: onLoad()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_c = Background;\nvar _c;\n$RefreshReg$(_c, \"Background\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Background","canvas1","fileName","_jsxFileName","lineNumber","columnNumber","context1","getContext","onLoad","canvas2","document","getElementById","context2","id","children","_c","$RefreshReg$"],"sources":["E:/MyProjects/BookStore/BookStore-Frontend-react/src/components/background/background.jsx"],"sourcesContent":["import React from 'react'\r\nimport './background.css'\r\n\r\n// const count = 320,\r\n// speed = 1,\r\n// dist = 60,\r\n// rSpeed = 0.05,\r\n// rMax = 80,\r\n//   frame = 20,\r\n//   onLoad = () => {\r\n//   let cvs = document.getElementById(\"background-canvas\"),\r\n//     img = document.getElementById(\"background-image\"),\r\n//     ctx = cvs.getContext(\"2d\"),\r\n//     w = cvs.width = window.innerWidth,\r\n//     h = cvs.height = window.innerHeight,\r\n//     r = 0,\r\n//     rVel = rSpeed,\r\n//     points = [],\r\n//     rand = Math.random\r\n//   for (let i = 0; i < count; ++i) {\r\n//     points.push({\r\n//       size: rand() * 4 + 0.5,\r\n//       pos: {\r\n//         x: rand() * w,\r\n//         y: rand() * h\r\n//       },\r\n//       vel: {\r\n//         x: (rand() - 0.5) * speed,\r\n//         y: (rand() - 0.5) * speed\r\n//       },\r\n//       color: {\r\n//         r: rand() * 255,\r\n//         g: rand() * 255,\r\n//         b: rand() * 255\r\n//       }\r\n//     })\r\n//   }\r\n//   setInterval(() => {\r\n//     w = cvs.width = window.innerWidth\r\n//     h = cvs.height = window.innerHeight\r\n//     r += rVel\r\n//     if ((r > rMax && rVel > 0) || (r < -rMax && rVel < 0))\r\n//       rVel *= -1\r\n//     img.style.transform = \"rotate(\" + r + \"deg)\"\r\n//     ctx.clearRect(0, 0, w, h)\r\n//     points.forEach((p, idx) => {\r\n//       p.pos.x += p.vel.x\r\n//       p.pos.y += p.vel.y\r\n//       if ((p.pos.x <= 0 && p.vel.x < 0) || (p.pos.x >= w && p.vel.x > 0))\r\n//         p.vel.x *= -1\r\n//       if ((p.pos.y <= 0 && p.vel.y < 0) || (p.pos.y >= h && p.vel.y > 0))\r\n//         p.vel.y *= -1\r\n//       ctx.fillStyle = \"white\"\r\n//       ctx.fillRect(p.pos.x - p.size / 2, p.pos.y - p.size / 2, p.size, p.size)\r\n//       for (let i = idx + 1; i < points.length; ++i) {\r\n//         let pi = points[i],\r\n//           xDist = pi.pos.x - p.pos.x,\r\n//           yDist = pi.pos.y - p.pos.y,\r\n//           rate = 1 - (xDist * xDist + yDist * yDist) / (dist * dist)\r\n//         if (rate > 0) {\r\n//           ctx.lineWidth = 0.4\r\n//           ctx.strokeStyle = \"rgba(\" + p.color.r + \",\" + p.color.g + \",\" + p.color.b + \",\" + rate + \")\"\r\n//           ctx.beginPath()\r\n//           ctx.moveTo(p.pos.x, p.pos.y)\r\n//           ctx.lineTo(pi.pos.x, pi.pos.y)\r\n//           ctx.stroke()\r\n//         }\r\n//       }\r\n//     })\r\n//   }, 1000 / frame)\r\n// }\r\n\r\nexport default function Background() {\r\n  let canvas1 = <canvas></canvas>,\r\n    context1 = canvas1.getContext('2d'),\r\n    onLoad = () => {\r\n      let canvas2 = document.getElementById('background-canvas'),\r\n        context2 = canvas2.getContext('2d')\r\n    }\r\n\r\n  return (\r\n    <div id=\"background\">\r\n      <canvas id=\"background-canvas\" />\r\n      {canvas1}\r\n      <script>{onLoad()}</script>\r\n    </div>\r\n  )\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,UAAUA,CAAA,EAAG;EACnC,IAAIC,OAAO,gBAAGF,OAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC;IAC7BC,QAAQ,GAAGL,OAAO,CAACM,UAAU,CAAC,IAAI,CAAC;IACnCC,MAAM,GAAGA,CAAA,KAAM;MACb,IAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC;QACxDC,QAAQ,GAAGH,OAAO,CAACF,UAAU,CAAC,IAAI,CAAC;IACvC,CAAC;EAEH,oBACER,OAAA;IAAKc,EAAE,EAAC,YAAY;IAAAC,QAAA,gBAClBf,OAAA;MAAQc,EAAE,EAAC;IAAmB;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChCJ,OAAO,eACRF,OAAA;MAAAe,QAAA,EAASN,MAAM,CAAC;IAAC;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV;AAACU,EAAA,GAfuBf,UAAU;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}